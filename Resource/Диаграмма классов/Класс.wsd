@startuml
class User{
   -int id
   -bool isWork
   -QString lastName
   -QString firstName
   -QString patronymic
   -QString address
   -QString phone
   -QString branch
   -QString login
   -QString password
}

class Contract{
   -int id
   -Date date
   -double insuranceSum
   -int typeInsurance
   -double tariffRate
   -QString branch
   -QString lastName
   -QString firstName
   -QString patronymic
   -QStringList comments
}

class ProfileWindow{
   User user
   void Logout()
}

class  LoginWindow{
   QString login
   QString password
   Database db
   void checkUser()
}

class TariffRateWindow{
   double rateOne
   double rateTwo
   double rateThree
   void setRateOne()
   void setRateTwo()
   void setRateThree()
}

class ContractConfirmationWindow{
   
   QTableView view
   void ConfirmContract()
   void NotConfirmContract()
}

class ContractConclusionWindow{
   Contract contractData
   void ConcludeContract()
}

class ContractRenegotiateWindow{
   Contract contractData
   void RenegotiateWindow()
}

class StatisticsWindow{
   
   QTableView view
}

class AddUserWindow{
   User userData
   void AddUser()
}

class ChangeUserWindow{
   User userData
   void ChangeUser()
   void DeleteUser()
}

class AbstractWindowForRole{
   ProfileWindow profile
   void SetUser()
}

class WindowNavigator{
   -AbstractWindowForRole WindowForRole
   -LoginWindow login
}

class Database {
   +bool UserVerify()
   +bool AddUser()
   +bool AddContract()
   +bool DeleteUser()
   +bool ConfirmationContract()
   +bool RenegotiateContract()
}

class AdminWindow{
   AdminModel model
   Database database
   ChangeUserWindow changeWindow
   AddUserWindow addWindow
   ProfileWindow profileWindow
   void showChangeWindow()
   void showProfileWindow()
}

class AgentWindow{
   AgentModel model
   Database database
   ContractConclusionWindow conclusionWindow
   ProfileWindow profileWindow
   ContractRenegotiateWindow renegotiateWindow
   StatisticsWindow statisticsWindow
}

class AccountantWindow{
   AccountantModel model
   Database database
   ProfileWindow profileWindow
   StatisticsWindow statisticsWindow
   TariffRateWindow tariffRate
   ContractConfirmationWindow confirmWindow
}

class AdminModel{
   QVector<User> users
   void AddUser()
   User GetUser(int index)
}

class AccountantModel{
   Vector<Contract> contracts
   void AddContract()
   Contract GetUser(int index)
}

class AgentModel{
   Vector<Contract> contracts
   void AddContract()
   Contract GetContract(int index)
}

AbstractWindowForRole <|-- AdminWindow
AbstractWindowForRole <|-- AgentWindow
AbstractWindowForRole <|-- AccountantWindow
AdminWindow --> AdminModel
AccountantWindow --> AccountantModel
AgentWindow --> AgentModel
AgentWindow o-- Database
AdminWindow o-- Database
AccountantWindow o-- Database
WindowNavigator --> AbstractWindowForRole
WindowNavigator --> LoginWindow
AdminWindow --> AddUserWindow
AdminWindow --> ChangeUserWindow
AgentWindow --> ContractConclusionWindow
AgentWindow --> ContractRenegotiateWindow
AgentWindow --> StatisticsWindow
AccountantWindow --> StatisticsWindow
AccountantWindow --> ContractConfirmationWindow
AccountantWindow --> TariffRateWindow
AbstractWindowForRole --> ProfileWindow
AgentModel --> Contract
AccountantModel --> Contract
AdminModel --> User
ProfileWindow --> User

AddUserWindow --> User
ChangeUserWindow --> User

ContractConclusionWindow --> Contract
ContractRenegotiateWindow --> Contract
ContractConfirmationWindow --> Contract

LoginWindow o-- Database

@enduml