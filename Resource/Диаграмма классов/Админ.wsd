@startuml
class User{
   -int id
   -bool isWork
   -QString lastName
   -QString firstName
   -QString patronymic
   -QString address
   -QString phone
   -QString branch
   -QString login
   -QString password
   -int role
}

class ProfileWindow{
   +void LogoutButtonClicked()
   +void CancelButtonClicked()
}

class  LoginWindow{
   -Database db
   -void LoginButtonClicked()
   +void LoginSuccessful()
}

class ChangeUserWindow{
   -User currentUser
   +User GetCurrentUser()
   +void BackButtonClicked()
   +void ConfirmButtonClicked()
}

class AbstractWindowForRole{
   +ProfileWindow profile
   +SidePanel messagePanel
   +void ShowMessage()
   +void Logout()
}

class WindowNavigator{
   -AbstractWindowForRole WindowForRole
   -LoginWindow loginWindow
   -Database db
   -void CreateAndShowLoginWindow()
   -void HideAndRemoveLoginWindow()
   -void HideAndRemoveRoleWindow()
   +void LoginSuccessful()
   +void Logout()
}

class Database {
   +void CreateTables()
   +Contract GetContractById()
   +User GetUserById()
   +bool ChangeContract()
   +bool UserVerify()
   +bool AddUser()
   +bool AddContract()
   +bool ChangeUser()
   +bool ConfirmationContract()
   +bool RenegotiateContract()
}

class AdminWindow{
   -Database db
   -ChangeUserWindow changeWindow
   -TableView viewUsers
   -void ShowViewUsers()
   -void ShowChangeUsers()
   -void UpdateViewUsers()
   -void ChangeUserBackButtonClicked()
   -void ChangeUserConfirmButtonClicked()
   -void DoubleClickedOnUser()
   -void RegistrationButtonClicked()
}

AbstractWindowForRole <|-- AdminWindow
AdminWindow o-- Database
WindowNavigator o-- Database
WindowNavigator -r-> AbstractWindowForRole
WindowNavigator --> LoginWindow
AdminWindow --> ChangeUserWindow
AbstractWindowForRole -r-> ProfileWindow
ChangeUserWindow --> User

LoginWindow o-- Database

@enduml